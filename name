#!/bin/bash

# This script is not orthogonal: it combines (1) name generation, (2) file management by renaming, and (3) file tagging.

# I think I should redo this.
# 1. an option (-a) for author.
# 2. current-filename token-sequence "title within quotes" tags...
# (if title is an empty string, then tag-list will be used in its place; otherwise tags shouldn't be in the file's name.)
# name -x pdf -a "kasparov, garry" i "analysis-of-field-transitions-in-zambia" economics chess field-transitions zambia

# Sat Feb  1 10:48:56 EST 2014
# USAGE: name [-x <EXTENSION>] <CURRENT-FILENAME> <TOKEN-SEQUENCE> <TAG-1> <TAG-2> ... <TAG-n>
# See <this-file> for more information about naming scheme.

	while getopts ":x:" opt; do
	  case $opt in
		  x)
			  EXT="$OPTARG"
				shift $(($OPTIND - 1));;
			\?)
			  echo "TODO: add help message.";;
		esac
	done

  if [[ "$#" < 3 ]]; then
	  echo "This function requires at least three arguments."
		echo "Usage: name [-x EXTENSION] <CURRENT-FILENAME> <TOKEN-SEQUENCE> <TAG-1> <TAG-2> ... <TAG-n>"
		exit 1
	fi

	CURRENT_NAME="$1"
	TOKENS="$2"
	DATE="$( date +%Y%m%d-%H%M%s )"
	NEW_NAME="$DATE"-"$TOKENS"

	shift
	shift

	for arg in "$@"; do
	  NEW_NAME="$NEW_NAME"."$arg"
	done

	if [ -n "$EXT" ]; then
	  NEW_NAME="$NEW_NAME"."$EXT"
	fi

	mv "$CURRENT_NAME" "$NEW_NAME"

	for arg in "$@"; do
	  tag set "$NEW_NAME" "$arg"
		echo "$arg"
	done
